{"ast":null,"code":"import { fetchPolicies, fetchErrors } from \"./index\";\nimport axios from \"axios\";\nconst initialState = {\n  policiesData: {},\n  error: \"\"\n};\nconst policyReducer = {\n  name: \"policies\",\n  reducer: function () {\n    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    let action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case \"FETCH_POLICIES\":\n        console.log(\"We are fetching the policies\");\n        return {\n          policiesData: action.payload,\n          error: \"\"\n        };\n\n      case \"FETCH_ERRORS\":\n        console.log(\"We are fetching the errors\");\n        return {\n          policiesData: {},\n          error: action.payload\n        };\n\n      default:\n        return state;\n    }\n  },\n  selectPolicies: state => state.policies,\n  doFetchPolicies: () => _ref => {\n    let {\n      dispatch\n    } = _ref;\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(response => {\n      const policies = response.data;\n      console.log(\"Got the data:- \", policies);\n      dispatch(fetchPolicies(policies));\n    }).catch(error => {\n      const errorMsg = error.message;\n      console.log(\"Got the error:- \", errorMsg);\n      dispatch(fetchErrors(errorMsg));\n    });\n  },\n  init: store => {\n    store.doFetchPolicies();\n    store.selectPolicies();\n  }\n};\nexport default policyReducer;","map":{"version":3,"sources":["/Users/learnyst/Desktop/Practice_Website_Builder/web-build-ui-v1/src/bundles/Policies.ts"],"names":["fetchPolicies","fetchErrors","axios","initialState","policiesData","error","policyReducer","name","reducer","state","action","type","console","log","payload","selectPolicies","policies","doFetchPolicies","dispatch","get","then","response","data","catch","errorMsg","message","init","store"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,WAAxB,QAA2C,SAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAWA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,UADc;AAGpBC,EAAAA,OAAO,EAAE,YAA0C;AAAA,QAAzCC,KAAyC,uEAAjCN,YAAiC;AAAA,QAAnBO,MAAmB;;AACjD,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,gBAAL;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,eAAO;AACLT,UAAAA,YAAY,EAAEM,MAAM,CAACI,OADhB;AAELT,UAAAA,KAAK,EAAE;AAFF,SAAP;;AAKF,WAAK,cAAL;AACEO,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,eAAO;AACLT,UAAAA,YAAY,EAAE,EADT;AAELC,UAAAA,KAAK,EAAEK,MAAM,CAACI;AAFT,SAAP;;AAKF;AACE,eAAOL,KAAP;AAhBJ;AAkBD,GAtBmB;AAwBpBM,EAAAA,cAAc,EAAGN,KAAD,IAA+BA,KAAK,CAACO,QAxBjC;AA0BpBC,EAAAA,eAAe,EACb,MACA,QAAuB;AAAA,QAAtB;AAAEC,MAAAA;AAAF,KAAsB;AACrBhB,IAAAA,KAAK,CACFiB,GADH,CACO,4CADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAML,QAAQ,GAAGK,QAAQ,CAACC,IAA1B;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BG,QAA/B;AACAE,MAAAA,QAAQ,CAAClB,aAAa,CAACgB,QAAD,CAAd,CAAR;AACD,KANH,EAOGO,KAPH,CAOUlB,KAAD,IAAW;AAChB,YAAMmB,QAAQ,GAAGnB,KAAK,CAACoB,OAAvB;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCW,QAAhC;AACAN,MAAAA,QAAQ,CAACjB,WAAW,CAACuB,QAAD,CAAZ,CAAR;AACD,KAXH;AAYD,GAzCiB;AA2CpBE,EAAAA,IAAI,EAAGC,KAAD,IAAwE;AAC5EA,IAAAA,KAAK,CAACV,eAAN;AACAU,IAAAA,KAAK,CAACZ,cAAN;AACD;AA9CmB,CAAtB;AAiDA,eAAeT,aAAf","sourcesContent":["import { fetchPolicies, fetchErrors } from \"./index\";\nimport axios from \"axios\";\n\nconst initialState = {\n  policiesData: {},\n  error: \"\",\n};\n\ninterface Action {\n  type: string;\n  payload?: any;\n}\n\n\nconst policyReducer = {\n  name: \"policies\",\n\n  reducer: (state = initialState, action: Action) => {\n    switch (action.type) {\n      case \"FETCH_POLICIES\":\n        console.log(\"We are fetching the policies\")\n        return {\n          policiesData: action.payload,\n          error: \"\",\n        };\n\n      case \"FETCH_ERRORS\":\n        console.log(\"We are fetching the errors\")\n        return {\n          policiesData: {},\n          error: action.payload,\n        };\n\n      default:\n        return state;\n    }\n  },\n\n  selectPolicies: (state: { policies: any; }) => state.policies,\n\n  doFetchPolicies:\n    () =>\n    ({ dispatch }: any) => {\n      axios\n        .get(\"https://jsonplaceholder.typicode.com/users\")\n        .then((response) => {\n          const policies = response.data;\n          console.log(\"Got the data:- \", policies);\n          dispatch(fetchPolicies(policies));\n        })\n        .catch((error) => {\n          const errorMsg = error.message;\n          console.log(\"Got the error:- \", errorMsg);\n          dispatch(fetchErrors(errorMsg));\n        });\n    },\n\n  init: (store: { doFetchPolicies: () => void; selectPolicies: () => void }) => {\n    store.doFetchPolicies();\n    store.selectPolicies();\n  },\n};\n\nexport default policyReducer;\n"]},"metadata":{},"sourceType":"module"}